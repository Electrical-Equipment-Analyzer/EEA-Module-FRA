/*
 * Copyright (C) 2014 Leo
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package tw.edu.sju.ee.eea.module.fra.file.fr.action;

import java.util.List;
import org.jfree.chart.ChartPanel;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import tw.edu.sju.ee.eea.module.fra.file.fr.FrDataObject;
import tw.edu.sju.ee.eea.ui.workspace.plot.BodePlot;

/**
 * Top component which displays something.
 */
//@ConvertAsProperties(
//        dtd = "-//tw.edu.sju.ee.eea.module.fra.file.fr.action//FrDiff//EN",
//        autostore = false
//)
@TopComponent.Description(
        preferredID = "FrDiffTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS
)
@TopComponent.Registration(mode = "editor", openAtStartup = false)
@ActionID(category = "Window", id = "tw.edu.sju.ee.eea.module.fra.file.fr.action.FrDiffTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
//@TopComponent.OpenActionRegistration(
//        displayName = "#CTL_FrDiffTopComponent",
//        preferredID = "FrDiffTopComponent"
//)
@Messages({
    "CTL_FrDiffTopComponent=Diff Frequency Response",
    "HINT_FrDiffTopComponent=Frequency Response Files",
    "TITLE_FrDiffTopComponent=Frequency Response Analysis",
    "LBL_FrDiffTopComponent=Magnitude(dB)"
})
public final class FrDiffTopComponent extends TopComponent {

    private BodePlot bodePlot;

    public FrDiffTopComponent(List<FrDataObject> context) {
        bodePlot = new BodePlot(Bundle.TITLE_FrDiffTopComponent());
        bodePlot.createAxisY(0, Bundle.LBL_FrDiffTopComponent());
        StringBuilder sb = null;
        for (int i = 0; i < context.size(); i++) {
            sb = sb != null ? sb.append(", ") : new StringBuilder();
            sb.append(context.get(i).getName());
            bodePlot.addData(i, 0, BodePlot.createXYSeriesCollection(context.get(i).getName(), context.get(i).getFile().getGain(), true));
        }
        initComponents();
        setName(Bundle.CTL_FrDiffTopComponent());
        setToolTipText(Bundle.HINT_FrDiffTopComponent() + " : " + sb);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new ChartPanel(bodePlot);

        setPreferredSize(new java.awt.Dimension(640, 480));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 620, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 460, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
